package com.easy_notes.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotBlank;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Entity // mark the class as a persistent Java class.
@Table(name = "notes") // mapped to table.
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(value = { "createdAt", "updatedAt" }, allowGetters = true)
public class Note implements Serializable {

	@Id // used to define the primary key
	@GeneratedValue(strategy = GenerationType.IDENTITY) //primary key generation strategy i.e primary key to be an Auto Increment field.
	private Long id;

	@NotBlank //validate field is not null or empty. 
	private String title;

	@NotBlank
	private String content;

	@Column(nullable = false, updatable = false)
	@Temporal(TemporalType.TIMESTAMP)
	@CreatedDate
	private Date createdAt;

	@Column(nullable = false)
	@Temporal(TemporalType.TIMESTAMP) // It converts the date and time values from Java Object to compatible database type and vice versa.
	@LastModifiedDate
	private Date updatedAt;

	// Getters and Setters ... (Omitted for brevity)

}
